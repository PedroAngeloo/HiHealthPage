package gcfv2;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.util.Map;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.google.cloud.functions.HttpFunction;
import com.google.cloud.functions.HttpRequest;
import com.google.cloud.functions.HttpResponse;
import com.sendgrid.*;
import com.sendgrid.helpers.mail.Mail;
import com.sendgrid.helpers.mail.objects.Content;
import com.sendgrid.helpers.mail.objects.Email;
import com.sendgrid.helpers.mail.objects.Personalization;

public class HelloHttpFunction implements HttpFunction {
    @Override
    public void service(HttpRequest request, HttpResponse response) throws IOException {
        response.appendHeader("Access-Control-Allow-Origin", "*");
        response.appendHeader("Access-Control-Allow-Methods", "POST, OPTIONS");
        response.appendHeader("Access-Control-Allow-Headers", "Content-Type, Authorization");
        response.appendHeader("Access-Control-Max-Age", "3600");

        if ("OPTIONS".equals(request.getMethod())) {
            response.setStatusCode(204);
            return;
        }

        ObjectMapper mapper = new ObjectMapper();
        Map<String, String> data;

        try (BufferedReader reader = request.getReader()) {
            data = mapper.readValue(reader, Map.class);
        }

        String userEmail = data.get("toMail");
        String contentText = data.get("content");

        Email from = new Email("pedrolazzarin@gmail.com", "HiHealth");
        Email to = new Email(userEmail);
        String subject = "Passou teu email la no HiHealth";
        Content content = new Content("text/plain", contentText);

        Mail mail = new Mail();
        mail.setFrom(from);
        mail.setSubject(subject);

        Personalization personalization = new Personalization();
        personalization.addTo(to);
        mail.addPersonalization(personalization);
        mail.addContent(content);

        SendGrid sg = new SendGrid(System.getenv("SENDGRID_API_KEY"));
        Request sendRequest = new Request();

        try {
            sendRequest.setMethod(Method.POST);
            sendRequest.setEndpoint("mail/send");
            sendRequest.setBody(mail.build());

            Response sendResponse = sg.api(sendRequest);
            response.setStatusCode(sendResponse.getStatusCode());

            BufferedWriter writer = response.getWriter();
            writer.write("Email enviado com sucesso. Status Code: " + sendResponse.getStatusCode());
        } catch (IOException ex) {
            response.setStatusCode(400);
            BufferedWriter writer = response.getWriter();
            writer.write("Erro ao enviar email: " + ex.getMessage());
        }
    }
}